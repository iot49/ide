# /etc/nginx/nginx.conf

# NOTE: nginx.conf generated automatically from nginx.template
#       edit nginx.template, NOT nginx.conf!

user                                nginx;
worker_processes                    1;

error_log                           /var/log/nginx/error.log warn;
pid                                 /var/run/nginx.pid;


events {
    worker_connections              256;
}

http {
    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;

    # log_format main                 '$remote_addr - $remote_user "$request" '
    #                                 '$status $body_bytes_sent "$http_referer" '
    #                                 '"$http_x_forwarded_for"';

    log_format main                 '$remote_addr - "$request" $status $body_bytes_sent';
    
    access_log                      /var/log/nginx/access.log main;

    sendfile                        on;
    keepalive_timeout               65;
    # gzip                          on;

    # http -> https redirect
    server {
        listen                      80;
        return                      301 https://$host$request_uri;
    }

    server {

        # disable port 80 after enabling https redirect (above)
        # listen                      80;

        # Enable ssl/tls (https): copy certificate to /etc/nginx/ssl and uncomment lines below
        listen                      443 ssl;
        ssl_certificate             /etc/nginx/ssl/cert.crt;
        ssl_certificate_key         /etc/nginx/ssl/cert.key;

        # password authentication (default: iot49/iot49)
        # auth_basic                  "iot49: Electronics for IoT";
        # auth_basic_user_file        htpasswd;

        # Docker DNS
        resolver                    127.0.0.11;       

        # MicroPython Development (Jupyter)
        location /micropython/ {
            # host ip set dynamically!
            proxy_pass              http://HOST_IP:8888;
            proxy_redirect          off;
            proxy_set_header        Host $host;

            # websocket support
            proxy_http_version      1.1;
            proxy_set_header        Upgrade "websocket";
            proxy_set_header        Connection "Upgrade";
            proxy_read_timeout      86400;
        }

        # Code-server
        location /code-server/ {
            proxy_pass              http://code-server:8443/;
            proxy_redirect          off;
            proxy_set_header        Host $http_host;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "upgrade";
        }

        # Duplicati
        location /duplicati {
            return                  301 $scheme://$host/duplicati/;
        }
        location ^~ /duplicati/ {
            rewrite                 /duplicati(.*) $1 break;
            proxy_pass              http://duplicati:8200;
        }

        # Wireshark
        # Don't know how to proxy, so using redirect to http instead ...
        # https://serverfault.com/questions/932628/how-to-handle-relative-urls-correctly-with-a-nginx-reverse-proxy
        location /wireshark {
            return                  301 http://$http_host:3000/;
        }

        # ARM32 Cross Compiler (Jupyter)
        location /arm32/ {
            proxy_pass              http://arm32:8889;
            proxy_redirect          off;
            proxy_set_header        Host $host;

            # websocket support
            proxy_http_version      1.1;
            proxy_set_header        Upgrade "websocket";
            proxy_set_header        Connection "Upgrade";
            proxy_read_timeout      86400;
        }

        # ESP32 Cross Compiler (Jupyter)
        location /esp-idf/ {
            proxy_pass              http://esp-idf:8890;
            proxy_redirect          off;
            proxy_set_header        Host $host;

            # websocket support
            proxy_http_version      1.1;
            proxy_set_header        Upgrade "websocket";
            proxy_set_header        Connection "Upgrade";
            proxy_read_timeout      86400;
        }

        # Balena-CLI
        location /balena-cli/ {
            proxy_pass              http://balena-cli:8891;
            proxy_redirect          off;
            proxy_set_header        Host $host;

            # websocket support
            proxy_http_version      1.1;
            proxy_set_header        Upgrade "websocket";
            proxy_set_header        Connection "Upgrade";
            proxy_read_timeout      86400;
        }

        # static content
        location / {
            auth_basic              off;
            root                    /etc/nginx/html;
            index                   index.html index.htm;
        }

    }

}
