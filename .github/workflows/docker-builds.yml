name: Docker Builds

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched files output variable
      dockerfiles: ${{ steps.filter.outputs.docker_files }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - name: Checkout code
      uses: actions/checkout@v3 
    - name: Find changed files
      uses: dorny/paths-filter@v2
      id: filter
      with:
        list-files: json
        filters: |
          docker:
            - "services/**/Dockerfile"
    - name: List files
      run: echo ${{ steps.filter.outputs.docker_files }}

  # JOB to build and test each of modified dockerfiles
  build:
    needs: changes
    strategy:
      matrix:
        dockerfile: ${{ fromJSON(needs.changes.outputs.dockerfiles) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: ls
        run: |
          dir="$(dirname ${{ matrix.dockerfile }})"
          service="$(basename $dir)"
          echo "dir=$dir" >> $GITHUB_ENV
          echo "service=$service" >> $GITHUB_ENV
          echo build ${{ matrix.dockerfile }}
          echo dir `dirname ${{ matrix.dockerfile }}`
          echo LS 1 ---------------
          ls
          cd `dirname ${{ matrix.dockerfile }}`
          echo LS 2 ---------------
          ls
      - name: ENV
        run: |
          echo ENV dir 1 ${{ env.dir }} 2
          echo ENV service 1 ${{ env.service }} 2
          echo ENV abc 1 ${{ env.abc }} 2
      - name: Login to Docker Hub
        uses: docker/login-action@v2  
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          context: ${{ env.dir }}
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest
