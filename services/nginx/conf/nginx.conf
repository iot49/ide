# /etc/nginx/nginx.conf

user                                nginx;
worker_processes                    1;

error_log                           /var/log/nginx/error.log warn;
pid                                 /var/run/nginx.pid;


events {
    worker_connections              256;
}

http {
    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;

    log_format main                 '$remote_addr - $remote_user "$request" '
                                    '$status $body_bytes_sent "$http_referer" '
                                    '"$http_x_forwarded_for"';

    access_log                      /var/log/nginx/access.log main;

    sendfile                        on;
    keepalive_timeout               65;
    # gzip                          on;

    # http -> https redirect
    server {
        listen                      80;
        return                      301 https://$host$request_uri;
    }

    server {

        # disable port 80 after enabling https redirect (above)
        # listen                      80;

        # Enable ssl/tls (https): copy certificate to /etc/nginx/ssl and uncomment lines below
        listen                      443 ssl;
        ssl_certificate             /etc/nginx/ssl/cert.crt;
        ssl_certificate_key         /etc/nginx/ssl/cert.key;

        # password authentication (default: iot49/iot49)
        auth_basic                  "iot49: Electronics for IoT";
        auth_basic_user_file        htpasswd;

        # Docker DNS
        resolver                    127.0.0.11;       

        # Jupyter
        location /jupyter/ {
            # proxy for network_mode: host
            proxy_pass              http://172.17.0.1:8888;
            proxy_redirect          off;
            proxy_set_header        Host $host;

            # websocket support
            proxy_http_version      1.1;
            proxy_set_header        Upgrade "websocket";
            proxy_set_header        Connection "Upgrade";
            proxy_read_timeout      86400;
        }

        # Code-server
        location /code-server/ {
            proxy_pass              http://code-server:8443/;
            proxy_redirect          off;
            proxy_set_header        Host $http_host;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "upgrade";
        }

        # Duplicati
        location /duplicati {
            return                  301 $scheme://$host/duplicati/;
        }
        location ^~ /duplicati/ {
            rewrite                 /duplicati(.*) $1 break;
            proxy_pass              http://duplicati:8200;
        }

        # Plotserver 
        location /plotserver/ {
            proxy_redirect          off;
            proxy_set_header        Host $http_host;
            proxy_pass              http://plotserver:8080/;
        }

        include plotserver.conf;

        # static content
        location / {
            auth_basic              off;
            root                    /home/iot/.html;
            index                   index.html index.htm;
        }

    }

}
