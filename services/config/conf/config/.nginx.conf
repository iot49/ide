server {

    # Enable ssl/tls (https): copy certificate to /etc/nginx/ssl and uncomment lines below
    listen                      443 ssl;
    ssl_certificate             /etc/nginx/ssl/cert.crt;
    ssl_certificate_key         /etc/nginx/ssl/cert.key;

    # password authentication (default: iot49/iot49)
    # auth_basic                  "iot49: Electronics for IoT";
    # auth_basic_user_file        htpasswd;

    # Docker DNS
    resolver                    127.0.0.11;       

    # static content
    location / {
        auth_basic              off;
        root                    /service-config/www;
        index                   index.html index.htm;
    }

}

server {

    server_name                 http-tester.amd64.local;

    # Enable ssl/tls (https): copy certificate to /etc/nginx/ssl and uncomment lines below
    # listen                      443 ssl;
    # ssl_certificate             /etc/nginx/ssl/cert.crt;
    # ssl_certificate_key         /etc/nginx/ssl/cert.key;

    # password authentication (default: iot49/iot49)
    # auth_basic                  "iot49: Electronics for IoT";
    # auth_basic_user_file        htpasswd;

    listen                      80;

    # Docker DNS
    resolver                    127.0.0.11;       

    location / {
        proxy_pass              http://http-tester:8000;
        proxy_redirect          off;
        proxy_set_header        Host $host;
        # proxy_intercept_errors on;

        # websocket support
        proxy_http_version      1.1;
        proxy_set_header        Upgrade "websocket";
        proxy_set_header        Connection "Upgrade";
    }
}
